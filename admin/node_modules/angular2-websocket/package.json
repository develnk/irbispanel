{
  "_args": [
    [
      {
        "raw": "angular2-websocket@git+https://github.com/afrad/angular2-websocket.git",
        "scope": null,
        "escapedName": "angular2-websocket",
        "name": "angular2-websocket",
        "rawSpec": "git+https://github.com/afrad/angular2-websocket.git",
        "spec": "git+https://github.com/afrad/angular2-websocket.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:afrad/angular2-websocket.git",
          "sshUrl": "git+ssh://git@github.com/afrad/angular2-websocket.git",
          "httpsUrl": "git+https://github.com/afrad/angular2-websocket.git",
          "gitUrl": "git://github.com/afrad/angular2-websocket.git",
          "shortcut": "github:afrad/angular2-websocket",
          "directUrl": "https://raw.githubusercontent.com/afrad/angular2-websocket/master/package.json"
        }
      },
      "/home/kluch/QProjects/irbispanel/admin"
    ]
  ],
  "_from": "git+https://github.com/afrad/angular2-websocket.git",
  "_id": "angular2-websocket@0.9.0",
  "_inCache": true,
  "_location": "/angular2-websocket",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-websocket@git+https://github.com/afrad/angular2-websocket.git",
    "scope": null,
    "escapedName": "angular2-websocket",
    "name": "angular2-websocket",
    "rawSpec": "git+https://github.com/afrad/angular2-websocket.git",
    "spec": "git+https://github.com/afrad/angular2-websocket.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:afrad/angular2-websocket.git",
      "sshUrl": "git+ssh://git@github.com/afrad/angular2-websocket.git",
      "httpsUrl": "git+https://github.com/afrad/angular2-websocket.git",
      "gitUrl": "git://github.com/afrad/angular2-websocket.git",
      "shortcut": "github:afrad/angular2-websocket",
      "directUrl": "https://raw.githubusercontent.com/afrad/angular2-websocket/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/afrad/angular2-websocket.git#35440cc38552b5be46c5c2fa74cc927d944162d3",
  "_shasum": "5e5db25ef3eadedb47b60b08d1c696dfc996cf5f",
  "_shrinkwrap": null,
  "_spec": "angular2-websocket@git+https://github.com/afrad/angular2-websocket.git",
  "_where": "/home/kluch/QProjects/irbispanel/admin",
  "bugs": {
    "url": "https://github.com/afrad/angular2-websocket/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.6"
  },
  "description": "Based on https://github.com/AngularClass/angular-websocket and migrated to Angular2 ## Installation",
  "devDependencies": {
    "@angular/common": "^2.0.0",
    "@angular/compiler": "^2.0.0",
    "@angular/core": "^2.0.0",
    "@types/bluebird": "^3.0.35",
    "codelyzer": "^1.0.0-beta.0",
    "core-js": "^2.4.1",
    "grunt": "~0.4.1",
    "grunt-contrib-uglify": "~0.2.4",
    "grunt-typescript": "~0.2.4",
    "reflect-metadata": "^0.1.8",
    "rxjs": "5.0.0-beta.12",
    "tslint": "^3.15.1",
    "typescript": "^2.1.1",
    "typings": "^2.0.0",
    "zone.js": "^0.6.25"
  },
  "gitHead": "35440cc38552b5be46c5c2fa74cc927d944162d3",
  "homepage": "https://github.com/afrad/angular2-websocket#readme",
  "main": "angular2-websocket",
  "name": "angular2-websocket",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": "^2.0.0",
    "@angular/compiler": "^2.0.0",
    "@angular/core": "^2.0.0",
    "core-js": "^2.4.1",
    "reflect-metadata": "^0.1.8",
    "rxjs": "5.0.0-beta.12",
    "typescript": "^2.1.1",
    "zone.js": "^0.6.25"
  },
  "readme": "# angular2websocket\n\nBased on https://github.com/AngularClass/angular-websocket and migrated to Angular2\n## Installation\n\n```bash\nnpm install angular2-websocket\n```\n\n## Usage:\n```ts\nimport {$WebSocket} from 'angular2-websocket/angular2-websocket'\nvar ws = new $WebSocket(\"url\");\nws.send(event);\n\n```\n\nalso\nws.getDataStream() returns Subject<any> to which you can attach an Observer (https://github.com/Reactive-Extensions/RxJS)\n\n## Compilation\n```bash\nnpm run typings\nnpm run compile\n\n```\n\n\nThe default value for binary type is 'arrayBuffer'.\n\n## example\n```ts\nimport {$WebSocket, WebSocketSendMode} from 'angular2-websocket/angular2-websocket';\n  \n// connect\nvar ws = new $WebSocket(\"ws://127.0.0.1:7000\");\n// you can send immediately after connect, \n// data will cached until connect open and immediately send or connect fail.\n  \n// when connect fail, websocket will reconnect or not,\n// you can set {WebSocketConfig.reconnectIfNotNormalClose = true} to enable auto reconnect\n// all cached data will lost when connect close if not reconnect\n  \n  \n// set received message callback\nws.onMessage(\n    (msg: MessageEvent)=> {\n        console.log(\"onMessage \", msg.data);\n    },\n    {autoApply: false}\n);\n  \n// set received message stream\nws.getDataStream().subscribe(\n    (msg)=> {\n        console.log(\"next\", msg.data);\n        ws.close(false);\n    },\n    (msg)=> {\n        console.log(\"error\", msg);\n    },\n    ()=> {\n        console.log(\"complete\");\n    }\n);\n  \n// send with default send mode (now default send mode is Observer)\nws.send(\"some thing\").subscribe(\n        (msg)=> {\n            console.log(\"next\", msg.data);\n        },\n        (msg)=> {\n            console.log(\"error\", msg);\n        },\n        ()=> {\n            console.log(\"complete\");\n        }\n    );\n  \nws.send(\"by default, this will never be send, because Observer is cold.\");\nws.send(\"by default, this will be send, because Observer is hot.\").publish().connect();\n  \nws.setSendMode(WebSocketSendMode.Direct);\nws.send(\"this will be send Direct, because send mode is set to Direct.\");\n  \nws.send(\"this will be send and return Promise.\", WebSocketSendMode.Promise).then(\n        (T) => {\n            console.log(\"is send\");\n        },\n        (T) => {\n            console.log(\"not send\");\n        }\n    );\n  \nws.send(\"this will be send and return Observer.\").subscribe(\n        (msg)=> {\n            console.log(\"next\", msg.data);\n        },\n        (msg)=> {\n            console.log(\"error\", msg);\n        },\n        ()=> {\n            console.log(\"complete\");\n        }\n    );\n\nws.close(false);    // close\nws.close(true);    // close immediately\n\n\n```\n\n## Binary type\nTo set the binary type for the websocket one can provide it as string in the constructor. Allowed types are:\n\n* 'blob' (default)\n* 'arraybuffer'\n\n```ts\nvar ws = new $WebSocket(\"ws://127.0.0.1:7000\", null, null, 'arraybuffer');\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/afrad/angular2-websocket.git"
  },
  "scripts": {
    "compile": "tsc",
    "lint": "tslint \"src/**/*.ts\"",
    "test": "echo \"Error: no test specified\" && exit 1",
    "typings": "typings install"
  },
  "version": "0.9.0"
}
