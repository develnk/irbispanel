{"version":3,"file":"/home/kluch/QProjects/irbispanel/admin/tools/config/seed.config.ts","sources":["/home/kluch/QProjects/irbispanel/admin/tools/config/seed.config.ts"],"names":[],"mappings":"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","sourcesContent":["import { join } from 'path';\nimport * as slash from 'slash';\nimport { argv } from 'yargs';\n\nimport { Environments, ExtendPackages, InjectableDependency } from './seed.config.interfaces';\n\n/************************* DO NOT CHANGE ************************\n *\n * DO NOT make any changes in this file because it will\n * make your migration to newer versions of the seed harder.\n *\n * Your application-specific configurations should be\n * in project.config.ts. If you need to change any tasks\n * from \"./tasks\" overwrite them by creating a task with the\n * same name in \"./projects\". For further information take a\n * look at the documentation:\n *\n * 1) https://github.com/mgechev/angular2-seed/tree/master/tools\n * 2) https://github.com/mgechev/angular2-seed/wiki\n *\n *****************************************************************/\n\n/**\n * The enumeration of available environments.\n * @type {Environments}\n */\nexport const ENVIRONMENTS: Environments = {\n  DEVELOPMENT: 'dev',\n  PRODUCTION: 'prod'\n};\n\n/**\n * This class represents the basic configuration of the seed.\n * It provides the following:\n * - Constants for directories, ports, versions etc.\n * - Injectable NPM dependencies\n * - Injectable application assets\n * - Temporary editor files to be ignored by the watcher and asset builder\n * - SystemJS configuration\n * - Autoprefixer configuration\n * - BrowserSync configuration\n * - Utilities\n */\nexport class SeedConfig {\n\n  /**\n   * The port where the application will run.\n   * The default port is `5555`, which can be overriden by the  `--port` flag when running `npm start`.\n   * @type {number}\n   */\n  PORT = argv['port'] || 5555;\n\n  /**\n   * The root folder of the project (up two levels from the current directory).\n   */\n  PROJECT_ROOT = join(__dirname, '../..');\n\n  /**\n   * The current environment.\n   * The default environment is `dev`, which can be overriden by the `--config-env ENV_NAME` flag when running `npm start`.\n   */\n  ENV = getEnvironment();\n\n  /**\n   * The flag for the debug option of the application.\n   * The default value is `false`, which can be overriden by the `--debug` flag when running `npm start`.\n   * @type {boolean}\n   */\n  DEBUG = argv['debug'] || false;\n\n  /**\n   * The port where the documentation application will run.\n   * The default docs port is `4003`, which can be overriden by the `--docs-port` flag when running `npm start`.\n   * @type {number}\n   */\n  DOCS_PORT = argv['docs-port'] || 4003;\n\n  /**\n   * The port where the unit test coverage report application will run.\n   * The default coverage port is `4004`, which can by overriden by the `--coverage-port` flag when running `npm start`.\n   * @type {number}\n   */\n  COVERAGE_PORT = argv['coverage-port'] || 4004;\n\n  /**\n  * The path to the coverage output\n  * NB: this must match what is configured in ./karma.conf.js\n  */\n  COVERAGE_DIR = 'coverage';\n\n  /**\n   * Karma reporter configuration\n   */\n  KARMA_REPORTERS: any = {\n    preprocessors: {\n      'dist/**/!(*spec).js': ['coverage']\n    },\n    reporters: ['mocha', 'coverage'],\n    coverageReporter: {\n      dir: this.COVERAGE_DIR + '/',\n      reporters: [\n        {type: 'json', subdir: '.', file: 'coverage-final.json'}\n      ]\n    }\n  };\n\n  /**\n   * The path for the base of the application at runtime.\n   * The default path is based on the environment '/',\n   * which can be overriden by the `--base` flag when running `npm start`.\n   * @type {string}\n   */\n  APP_BASE = argv['base'] || '/';\n\n  /**\n   * The base path of node modules.\n   * @type {string}\n   */\n  NPM_BASE = slash(join(this.APP_BASE, 'node_modules/'));\n\n  /**\n   * The flag for the hot-loader option of the application.\n   * Per default the option is not set, but can be set by the `--hot-loader` flag when running `npm start`.\n   * @type {boolean}\n   */\n  ENABLE_HOT_LOADING = argv['hot-loader'];\n\n  /**\n   * The port where the application will run, if the `hot-loader` option mode is used.\n   * The default hot-loader port is `5578`.\n   * @type {number}\n   */\n  HOT_LOADER_PORT = 5578;\n\n  /**\n   * The build interval which will force the TypeScript compiler to perform a typed compile run.\n   * Between the typed runs, a typeless compile is run, which is typically much faster.\n   * For example, if set to 5, the initial compile will be typed, followed by 5 typeless runs,\n   * then another typed run, and so on.\n   * If a compile error is encountered, the build will use typed compilation until the error is resolved.\n   * The default value is `0`, meaning typed compilation will always be performed.\n   * @type {number}\n   */\n  TYPED_COMPILE_INTERVAL = 0;\n\n  /**\n   * The directory where the bootstrap file is located.\n   * The default directory is `app`.\n   * @type {string}\n   */\n  BOOTSTRAP_DIR = argv['app'] || 'app';\n\n  /**\n   * The directory where the client files are located.\n   * The default directory is `client`.\n   * @type {string}\n   */\n  APP_CLIENT = argv['client'] || 'client';\n\n  /**\n   * The bootstrap file to be used to boot the application. The file to be used is dependent if the hot-loader option is\n   * used or not.\n   * Per default (non hot-loader mode) the `main.ts` file will be used, with the hot-loader option enabled, the\n   * `hot_loader_main.ts` file will be used.\n   * @type {string}\n   */\n  BOOTSTRAP_MODULE = `${this.BOOTSTRAP_DIR}/` + (this.ENABLE_HOT_LOADING ? 'hot_loader_main' : 'main');\n\n  BOOTSTRAP_PROD_MODULE = `${this.BOOTSTRAP_DIR}/` + 'main';\n\n  NG_FACTORY_FILE = 'main-prod';\n\n  BOOTSTRAP_FACTORY_PROD_MODULE = `${this.BOOTSTRAP_DIR}/${this.NG_FACTORY_FILE}`;\n  /**\n   * The default title of the application as used in the `<title>` tag of the\n   * `index.html`.\n   * @type {string}\n   */\n  APP_TITLE = 'Welcome to angular2-seed!';\n\n  /**\n   * The base folder of the applications source files.\n   * @type {string}\n   */\n  APP_SRC = `src/${this.APP_CLIENT}`;\n\n  /**\n   * The folder of the applications asset files.\n   * @type {string}\n   */\n  ASSETS_SRC = `${this.APP_SRC}/assets`;\n\n  /**\n   * The folder of the applications css files.\n   * @type {string}\n   */\n  CSS_SRC = `${this.APP_SRC}/css`;\n\n  /**\n   * The directory of the applications tools\n   * @type {string}\n   */\n  TOOLS_DIR = 'tools';\n\n  /**\n   * The directory of the tasks provided by the seed.\n   */\n  SEED_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'seed');\n\n  /**\n   * The destination folder for the generated documentation.\n   * @type {string}\n   */\n  DOCS_DEST = 'docs';\n\n  /**\n   * The base folder for built files.\n   * @type {string}\n   */\n  DIST_DIR = 'dist';\n\n  /**\n   * The folder for built files in the `dev` environment.\n   * @type {string}\n   */\n  DEV_DEST = `${this.DIST_DIR}/dev`;\n\n  /**\n   * The folder for the built files in the `prod` environment.\n   * @type {string}\n   */\n  PROD_DEST = `${this.DIST_DIR}/prod`;\n\n  /**\n   * The folder for temporary files.\n   * @type {string}\n   */\n  TMP_DIR = `${this.DIST_DIR}/tmp`;\n\n  /**\n   * The folder for the built files, corresponding to the current environment.\n   * @type {string}\n   */\n  APP_DEST = this.ENV === ENVIRONMENTS.DEVELOPMENT ? this.DEV_DEST : this.PROD_DEST;\n\n  /**\n   * The folder for the built CSS files.\n   * @type {strings}\n   */\n  CSS_DEST = `${this.APP_DEST}/css`;\n\n  /**\n   * The folder for the built JavaScript files.\n   * @type {string}\n   */\n  JS_DEST = `${this.APP_DEST}/js`;\n\n  /**\n   * The version of the application as defined in the `package.json`.\n   */\n  VERSION = appVersion();\n\n  /**\n   * The name of the bundle file to includes all CSS files.\n   * @type {string}\n   */\n  CSS_PROD_BUNDLE = 'main.css';\n\n  /**\n   * The name of the bundle file to include all JavaScript shims.\n   * @type {string}\n   */\n  JS_PROD_SHIMS_BUNDLE = 'shims.js';\n\n  /**\n   * The name of the bundle file to include all JavaScript application files.\n   * @type {string}\n   */\n  JS_PROD_APP_BUNDLE = 'app.js';\n\n  /**\n   * The required NPM version to run the application.\n   * @type {string}\n   */\n  VERSION_NPM = '2.14.2';\n\n  /**\n   * The required NodeJS version to run the application.\n   * @type {string}\n   */\n  VERSION_NODE = '4.0.0';\n\n  /**\n   * The flag to enable handling of SCSS files\n   * The default value is false. Override with the '--scss' flag.\n   * @type {boolean}\n   */\n  ENABLE_SCSS = argv['scss'] || false;\n\n  /**\n   * The list of NPM dependcies to be injected in the `index.html`.\n   * @type {InjectableDependency[]}\n   */\n  NPM_DEPENDENCIES: InjectableDependency[] = [\n    { src: 'zone.js/dist/zone.js', inject: 'libs' },\n    { src: 'core-js/client/shim.min.js', inject: 'shims' },\n    { src: 'systemjs/dist/system.src.js', inject: 'shims', env: ENVIRONMENTS.DEVELOPMENT },\n    // Temporary fix. See https://github.com/angular/angular/issues/9359\n    { src: '.tmp/Rx.min.js', inject: 'libs', env: ENVIRONMENTS.DEVELOPMENT },\n  ];\n\n  /**\n   * The list of local files to be injected in the `index.html`.\n   * @type {InjectableDependency[]}\n   */\n  APP_ASSETS: InjectableDependency[] = [\n    { src: `${this.CSS_SRC}/main.${this.getInjectableStyleExtension()}`, inject: true, vendor: false },\n  ];\n\n  /**\n   * The list of editor temporary files to ignore in watcher and asset builder.\n   * @type {string[]}\n   */\n  TEMP_FILES: string[] = [\n    '**/*___jb_tmp___',\n    '**/*~',\n  ];\n\n  /**\n   * Returns the array of injectable dependencies (npm dependencies and assets).\n   * @return {InjectableDependency[]} The array of npm dependencies and assets.\n   */\n  get DEPENDENCIES(): InjectableDependency[] {\n    return normalizeDependencies(this.NPM_DEPENDENCIES.filter(filterDependency.bind(null, this.ENV)))\n      .concat(this.APP_ASSETS.filter(filterDependency.bind(null, this.ENV)));\n  }\n\n  /**\n   * The configuration of SystemJS for the `dev` environment.\n   * @type {any}\n   */\n  SYSTEM_CONFIG_DEV: any = {\n    defaultJSExtensions: true,\n    paths: {\n      [this.BOOTSTRAP_MODULE]: `${this.APP_BASE}${this.BOOTSTRAP_MODULE}`,\n      '@angular/common': 'node_modules/@angular/common/bundles/common.umd.js',\n      '@angular/compiler': 'node_modules/@angular/compiler/bundles/compiler.umd.js',\n      '@angular/core': 'node_modules/@angular/core/bundles/core.umd.js',\n      '@angular/forms': 'node_modules/@angular/forms/bundles/forms.umd.js',\n      '@angular/http': 'node_modules/@angular/http/bundles/http.umd.js',\n      '@angular/platform-browser': 'node_modules/@angular/platform-browser/bundles/platform-browser.umd.js',\n      '@angular/platform-browser-dynamic': 'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n      '@angular/router': 'node_modules/@angular/router/bundles/router.umd.js',\n\n      '@angular/common/testing': 'node_modules/@angular/common/bundles/common-testing.umd.js',\n      '@angular/compiler/testing': 'node_modules/@angular/compiler/bundles/compiler-testing.umd.js',\n      '@angular/core/testing': 'node_modules/@angular/core/bundles/core-testing.umd.js',\n      '@angular/http/testing': 'node_modules/@angular/http/bundles/http-testing.umd.js',\n      '@angular/platform-browser/testing':\n        'node_modules/@angular/platform-browser/bundles/platform-browser-testing.umd.js',\n      '@angular/platform-browser-dynamic/testing':\n        'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.js',\n      '@angular/router/testing': 'node_modules/@angular/router/bundles/router-testing.umd.js',\n\n      'app/*': '/app/*',\n      // For test config\n      'dist/dev/*': '/base/dist/dev/*',\n      '*': 'node_modules/*'\n    },\n    packages: {\n    }\n  };\n\n  /**\n   * The configuration of SystemJS of the application.\n   * Per default, the configuration of the `dev` environment will be used.\n   * @type {any}\n   */\n  SYSTEM_CONFIG: any = this.SYSTEM_CONFIG_DEV;\n\n  /**\n   * The system builder configuration of the application.\n   * @type {any}\n   */\n  SYSTEM_BUILDER_CONFIG: any = {\n    defaultJSExtensions: true,\n    base: this.PROJECT_ROOT,\n    packageConfigPaths: [\n      join('node_modules', '*', 'package.json'),\n      join('node_modules', '@angular', '*', 'package.json')\n    ],\n    paths: {\n      // Note that for multiple apps this configuration need to be updated\n      // You will have to include entries for each individual application in\n      // `src/client`.\n      [join(this.TMP_DIR, this.BOOTSTRAP_DIR, '*')]: `${this.TMP_DIR}/${this.BOOTSTRAP_DIR}/*`,\n      'node_modules/*': 'node_modules/*',\n      '*': 'node_modules/*'\n    },\n    packages: {\n      '@angular/common': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/compiler': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/core/testing': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/core': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/forms': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/http': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/platform-browser': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/platform-browser-dynamic': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      '@angular/router': {\n        main: 'index.js',\n        defaultExtension: 'js'\n      },\n      'rxjs': {\n        main: 'Rx.js',\n        defaultExtension: 'js'\n      }\n    }\n  };\n\n  /**\n   * The Autoprefixer configuration for the application.\n   * @type {Array}\n   */\n  BROWSER_LIST = [\n    'ie >= 10',\n    'ie_mob >= 10',\n    'ff >= 30',\n    'chrome >= 34',\n    'safari >= 7',\n    'opera >= 23',\n    'ios >= 7',\n    'android >= 4.4',\n    'bb >= 10'\n  ];\n\n  /**\n   * White list for CSS color guard\n   * @type {[string, string][]}\n   */\n  COLOR_GUARD_WHITE_LIST: [string, string][] = [\n  ];\n\n  /**\n   * Configurations for NPM module configurations. Add to or override in project.config.ts.\n   * If you like, use the mergeObject() method to assist with this.\n   */\n  PLUGIN_CONFIGS: any = {\n    /**\n     * The BrowserSync configuration of the application.\n     * The default open behavior is to open the browser. To prevent the browser from opening use the `--b`  flag when\n     * running `npm start` (tested with serve.dev).\n     * Example: `npm start -- --b`\n     * @type {any}\n     */\n    'browser-sync': {\n      middleware: [require('connect-history-api-fallback')({\n        index: `${this.APP_BASE}index.html`\n      })],\n      port: this.PORT,\n      startPath: this.APP_BASE,\n      open: argv['b'] ? false : true,\n      injectChanges: false,\n      server: {\n        baseDir: `${this.DIST_DIR}/empty/`,\n        routes: {\n          [`${this.APP_BASE}${this.APP_SRC}`]: this.APP_SRC,\n          [`${this.APP_BASE}${this.APP_DEST}`]: this.APP_DEST,\n          [`${this.APP_BASE}node_modules`]: 'node_modules',\n          [`${this.APP_BASE.replace(/\\/$/, '')}`]: this.APP_DEST\n        }\n      }\n    },\n\n    // Note: you can customize the location of the file\n    'environment-config': join(this.PROJECT_ROOT, this.TOOLS_DIR, 'env'),\n\n    /**\n     * The options to pass to gulp-sass (and then to node-sass).\n     * Reference: https://github.com/sass/node-sass#options\n     * @type {object}\n     */\n    'gulp-sass': {\n      includePaths: ['./node_modules/']\n    },\n\n    /**\n     * The options to pass to gulp-concat-css\n     * Reference: https://github.com/mariocasciaro/gulp-concat-css\n     * @type {object}\n     */\n    'gulp-concat-css': {\n      targetFile: this.CSS_PROD_BUNDLE,\n      options: {\n        rebaseUrls: false\n      }\n    }\n  };\n\n  /**\n   * Recursively merge source onto target.\n   * @param {any} target The target object (to receive values from source)\n   * @param {any} source The source object (to be merged onto target)\n   */\n  mergeObject(target: any, source: any) {\n    const deepExtend = require('deep-extend');\n    deepExtend(target, source);\n  }\n\n  /**\n   * Locate a plugin configuration object by plugin key.\n   * @param {any} pluginKey The object key to look up in PLUGIN_CONFIGS.\n   */\n  getPluginConfig(pluginKey: string): any {\n    if (this.PLUGIN_CONFIGS[pluginKey]) {\n      return this.PLUGIN_CONFIGS[pluginKey];\n    }\n    return null;\n  }\n\n  getInjectableStyleExtension() {\n    return this.ENV === ENVIRONMENTS.PRODUCTION && this.ENABLE_SCSS ? 'scss' : 'css';\n  }\n\n  addPackageBundles(pack: ExtendPackages) {\n\n    if (pack.path) {\n      this.SYSTEM_CONFIG_DEV.paths[pack.name] = pack.path;\n    }\n\n    if (pack.packageMeta) {\n      this.SYSTEM_BUILDER_CONFIG.packages[pack.name] = pack.packageMeta;\n    }\n  }\n\n}\n\n/**\n * Normalizes the given `deps` to skip globs.\n * @param {InjectableDependency[]} deps - The dependencies to be normalized.\n */\nexport function normalizeDependencies(deps: InjectableDependency[]) {\n  deps\n    .filter((d: InjectableDependency) => !/\\*/.test(d.src)) // Skip globs\n    .forEach((d: InjectableDependency) => d.src = require.resolve(d.src));\n  return deps;\n}\n\n/**\n * Returns if the given dependency is used in the given environment.\n * @param  {string}               env - The environment to be filtered for.\n * @param  {InjectableDependency} d   - The dependency to check.\n * @return {boolean}                    `true` if the dependency is used in this environment, `false` otherwise.\n */\nfunction filterDependency(env: string, d: InjectableDependency): boolean {\n  if (!d.env) {\n    d.env = Object.keys(ENVIRONMENTS).map(k => ENVIRONMENTS[k]);\n  }\n  if (!(d.env instanceof Array)) {\n    (<any>d).env = [d.env];\n  }\n  return d.env.indexOf(env) >= 0;\n}\n\n/**\n * Returns the applications version as defined in the `package.json`.\n * @return {number} The applications version.\n */\nfunction appVersion(): number | string {\n  var pkg = require('../../package.json');\n  return pkg.version;\n}\n\n/**\n * Returns the environment of the application.\n */\nfunction getEnvironment() {\n  let base: string[] = argv['_'];\n  let prodKeyword = !!base.filter(o => o.indexOf(ENVIRONMENTS.PRODUCTION) >= 0).pop();\n  let env = (argv['env'] || '').toLowerCase();\n  if ((base && prodKeyword) || env === ENVIRONMENTS.PRODUCTION) {\n    return ENVIRONMENTS.PRODUCTION;\n  } else {\n    return ENVIRONMENTS.DEVELOPMENT;\n  }\n}\n"]}